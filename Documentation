Documentation:

The `OldPhonePadConverter` class provides a method `ConvertInputToText` that converts input from an old phone keypad, consisting

 of alphanumeric characters and special keys like backspace and send, into the corresponding text output.

##### Public API:


public static string ConvertInputToText(string input)


The `ConvertInputToText` method takes a string input and processes it according to the rules specified in the prompt. It iterates over each character in the input and performs the necessary operations based on the character, such as button presses, backspace, and send. The method returns the converted output string.

##### Usage Example:


string input = "222 2 22#";
string output = OldPhonePadConverter.ConvertInputToText(input);
Console.WriteLine(output);  // Output: "CAB"


##### Class Members:


private static char GetCharFromButtonPress(int buttonNumber, int buttonPressCount)


The `GetCharFromButtonPress` method retrieves the character associated with a button press. It takes the button number and the number of times the button has been pressed as input and returns the corresponding character.

#### Refactored Code:

The code has been refactored to improve readability and maintainability. Here are the key changes:

- The class name has been updated to `OldPhonePadConverter` to better reflect its purpose.
- The method name has been changed to `ConvertInputToText` to provide a clearer description of its functionality.
- The method signature has been updated to use the `string` return type.
- The logic for obtaining the character from button presses has been extracted into a separate method `GetCharFromButtonPress`.
- The `char.IsDigit` method is used to check if a character is a digit, providing more clarity and simplicity.
- Unnecessary type conversions have been removed, simplifying the code logic.
- Comments have been added to improve code understanding.

